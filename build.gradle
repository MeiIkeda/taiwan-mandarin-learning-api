buildscript {
	ext {
		springBootVersion = '1.0.0.DEV'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'
//sourceCompatibility = javaVersion
//targetCompatibility = javaVersion

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	compile 'org.mariadb.jdbc:mariadb-java-client:2.2.6'
	compile 'mysql:mysql-connector-java'
	compile 'org.springframework.boot:spring-boot-starter-jdbc'
	compile 'org.projectlombok:lombok:1.16.6'
	compile('io.sentry:sentry-logback:1.7.22')
	compile('io.sentry:sentry-spring:1.7.22')
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	runtime 'org.springframework.boot:spring-boot-devtools'
	runtime 'mysql:mysql-connector-java'
	// runtime 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok:1.18.6'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}
